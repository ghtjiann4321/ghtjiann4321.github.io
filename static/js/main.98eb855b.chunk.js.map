{"version":3,"sources":["app/home/duck/types.js","app/home/duck/reducers.js","app/home/duck/operations.js","app/home/duck/actions.js","app/home/duck/index.js","reducers.js","app/common/search/Search.js","app/common/spinner/styles.js","app/common/spinner/Spinner.js","app/common/table-view/styles.js","app/common/table-view/TableView.js","app/common/table-view/TableViewVehicle.js","app/common/dialog-view/DialogView.js","app/home/styles.js","app/home/Home.js","app/home/HomeContainer.js","App.js","serviceWorker.js","index.js"],"names":["types","INITIAL_STATE","totalPeopleCount","people","personVehicles","isLoading","isLoadingDialog","page","searchString","selectedPerson","loadData","type","loadDataSuccess","data","loadDataFailed","error","loadDataVehicles","loadDataVehiclesSuccess","loadDataVehiclesFailed","operations","removeData","entity","fetchData","url","dispatch","fetch","then","response","json","fetchDataVehicles","urls","Promise","all","map","vehicles","setSearch","setSelectedPerson","person","homeReducer","state","arguments","length","undefined","action","Object","objectSpread","results","count","defineProperty","rootReducer","combineReducers","home","SearchInput","styled","input","_templateObject","displayName","Search","handleChange","event","_this","throttleInput","target","value","debounce","val","props","onChange","react_default","a","createElement","this","placeholder","Component","SpinnerContent","div","styles_templateObject","SpinnerText","Typography","_templateObject2","SpinnerOverlay","Spinner_templateObject","Spinner","className","variant","PureComponent","TableContent","table_view_styles_templateObject","TableCellBold","TableCell","styles_templateObject2","StyledButton","Button","_templateObject3","WrapperOverflow","_templateObject4","BtnIcon","Icon","_templateObject5","TableWrapper","Table","_templateObject6","TableView","handleChangePage","onChangePage","handleClickOpenDialog","onClickButton","_this2","_this$props","dataCount","Spinner_Spinner","TableHead_default","TableRow_default","TableCell_default","TableBody_default","row","key","name","height","mass","gender","dist_default","format","edited","align","size","color","onClick","colSpan","TableFooter_default","TablePagination_default","labelRowsPerPage","rowsPerPageOptions","rowsPerPage","SelectProps","native","defaultProps","model","manufacturer","vehicle_class","DialogView","handleClose","onClose","other","objectWithoutProperties","CloseBtn","DialogView_templateObject","Dialog_default","assign","fullWidth","maxWidth","DialogTitle_default","concat","index_es","lib_default","TableViewVehicle_TableView","PaperWrapper","Paper","home_styles_templateObject","PaperHeader","home_styles_templateObject2","LogoWrapper","styles_templateObject3","Logo","svg","styles_templateObject4","WrapperPos","styles_templateObject5","apiRootUrl","Home","open","handleChangeInput","newPage","setState","loadVehicles","handleCloseDialog","handleExited","requestArr","i","push","bpWidth","width","container","justify","item","xs","elevation","viewBox","d","smDown","Search_Search","TableView_TableView","DialogView_DialogView","onExited","withWidth","HomeContainer","connect","_state$home","homeOperations","fetchDataVehicle","AppWrapper","App_templateObject","THEME","createMuiTheme","typography","useNextVariants","fontFamily","fontSize","fontWeightLight","fontWeightRegular","fontWeightMedium","App","styles","theme","CssBaseline_default","home_HomeContainer","Boolean","window","location","hostname","match","middleware","applyMiddleware","thunk","logger","store","createStore","ReactDOM","render","es","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.98eb855b.chunk.js","sourcesContent":["const LOAD_DATA = '[HOME] LOAD DATA '\nconst LOAD_DATA_SUCCESS = '[HOME] LOAD DATA SUCCESS'\nconst LOAD_DATA_FAILED = '[HOME] LOAD DATA FAILED'\n\nconst LOAD_DATA_VEHICLES = '[HOME] LOAD DATA VEHICLES '\nconst LOAD_DATA_VEHICLES_SUCCESS = '[HOME] LOAD DATA VEHICLES SUCCESS'\nconst LOAD_DATA_VEHICLES_FAILED = '[HOME] LOAD DATA VEHICLES FAILED'\n\nconst REMOVE_DATA = '[HOME] REMOVE DATA'\nconst SET_SEARCH = '[HOME] SET SEARCH'\nconst SET_SELECTED_PERSON = '[HOME] SET SELECTED_PERSON'\n\nexport default {\n  LOAD_DATA,\n  LOAD_DATA_SUCCESS,\n  LOAD_DATA_FAILED,\n  LOAD_DATA_VEHICLES,\n  LOAD_DATA_VEHICLES_SUCCESS,\n  LOAD_DATA_VEHICLES_FAILED,\n  REMOVE_DATA,\n  SET_SEARCH,\n  SET_SELECTED_PERSON\n}\n","import types from './types'\n\nconst INITIAL_STATE = {\n  totalPeopleCount: 0,\n  people: [],\n  personVehicles: [],\n  isLoading: false,\n  isLoadingDialog: false,\n  page: 0,\n  searchString: '',\n  selectedPerson: null\n}\n\nconst homeReducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case types.LOAD_DATA:\n      return { ...state, isLoading: true }\n\n    case types.LOAD_DATA_SUCCESS:\n      return { ...state, people: action.data.results, totalPeopleCount: action.data.count, page: action.page, isLoading: false }\n\n    case types.LOAD_DATA_VEHICLES:\n      return { ...state, isLoadingDialog: true }\n\n    case types.LOAD_DATA_VEHICLES_SUCCESS:\n      return { ...state, personVehicles: action.data, isLoadingDialog: false }\n\n    case types.LOAD_DATA_VEHICLES_FAILED:\n    case types.LOAD_DATA_FAILED:\n      return { ...state, isLoading: false }\n\n    case types.REMOVE_DATA:\n      return { ...state, [action.entity]: [] }\n\n    case types.SET_SEARCH:\n      return { ...state, searchString: action.searchString }\n\n    case types.SET_SELECTED_PERSON:\n      return { ...state, selectedPerson: action.selectedPerson }\n\n    default:\n      return state\n  }\n}\n\nexport default homeReducer\n","import Actions from './actions'\n\nconst loadData = Actions.loadData\nconst loadDataSuccess = Actions.loadDataSuccess\nconst loadDataFailed = Actions.loadDataFailed\nconst loadDataVehicles = Actions.loadDataVehicles\nconst loadDataVehiclesSuccess = Actions.loadDataVehiclesSuccess\nconst loadDataVehiclesFailed = Actions.loadDataVehiclesFailed\nconst removeData = Actions.removeData\nconst setSearch = Actions.setSearch\nconst setSelectedPerson = Actions.setSelectedPerson\n\nexport default {\n  loadData,\n  loadDataSuccess,\n  loadDataFailed,\n  loadDataVehicles,\n  loadDataVehiclesSuccess,\n  loadDataVehiclesFailed,\n  removeData,\n  fetchData,\n  fetchDataVehicles,\n  setSearch,\n  setSelectedPerson\n}\n\nexport function fetchData(url, page) {\n  return dispatch => {\n    dispatch(loadData())\n    return fetch(url)\n      .then(response => response.json(), error => dispatch(loadDataFailed(error)))\n      .then(response => dispatch(loadDataSuccess(response, page)))\n  }\n}\n\nexport function fetchDataVehicles(urls) {\n  return dispatch => {\n    dispatch(loadDataVehicles())\n\n    try {\n      const data = Promise.all(urls.map(url => fetch(url).then(response => response.json())))\n\n      data.then(vehicles => {\n        dispatch(loadDataVehiclesSuccess(vehicles))\n      })\n    } catch (error) {\n      dispatch(loadDataVehiclesFailed(error))\n    }\n  }\n}\n","import types from './types.js'\n\nconst loadData = () => ({\n  type: types.LOAD_DATA,\n  isLoading: true\n})\n\nconst loadDataSuccess = (data, page) => ({\n  type: types.LOAD_DATA_SUCCESS,\n  isLoading: false,\n  data,\n  page\n})\n\nconst loadDataFailed = error => ({\n  type: types.LOAD_DATA_FAILED,\n  isLoading: false,\n  error\n})\n\nconst loadDataVehicles = () => ({\n  type: types.LOAD_DATA_VEHICLES\n})\n\nconst loadDataVehiclesSuccess = data => ({\n  type: types.LOAD_DATA_VEHICLES_SUCCESS,\n  isLoading: false,\n  data\n})\n\nconst loadDataVehiclesFailed = error => ({\n  type: types.LOAD_DATA_VEHICLES_FAILED,\n  isLoading: false,\n  error\n})\n\nconst removeData = entity => ({\n  type: types.REMOVE_DATA,\n  entity\n})\n\nconst setSearch = searchString => ({\n  type: types.SET_SEARCH,\n  searchString: searchString\n})\n\nconst setSelectedPerson = person => ({\n  type: types.SET_SELECTED_PERSON,\n  selectedPerson: person\n})\n\nexport default {\n  loadData,\n  loadDataSuccess,\n  loadDataFailed,\n  loadDataVehicles,\n  loadDataVehiclesSuccess,\n  loadDataVehiclesFailed,\n  removeData,\n  setSearch,\n  setSelectedPerson\n}\n","import homeReducer from './reducers'\nexport { default as homeOperations } from './operations'\nexport { default as homeTypes } from './types'\n\nexport default homeReducer\n","import { combineReducers } from 'redux'\nimport homeReducer from './app/home/duck/index'\n\nconst rootReducer = combineReducers({\n  home: homeReducer\n})\n\nexport default rootReducer\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport styled from 'styled-components'\nimport { debounce } from 'lodash'\n\nconst SearchInput = styled.input`\n  height: 46px;\n  border: none;\n  width: 300px;\n  padding: 0 20px;\n  font-size: 16px;\n  outline: none;\n  margin-top: -3px;\n  border-radius: 30px;\n  box-shadow: none !important;\n`\nSearchInput.displayName = 'SearchInput'\n\nexport default class Search extends Component {\n  static propTypes = {\n    onChange: PropTypes.func\n  }\n\n  handleChange = () => event => {\n    this.throttleInput(event.target.value)\n  }\n\n  throttleInput = debounce(val => {\n    this.props.onChange(val)\n  }, 300)\n\n  render() {\n    return <SearchInput type=\"text\" onChange={this.handleChange()} placeholder=\"Search a character...\" />\n  }\n}\n","import styled from 'styled-components'\nimport { Typography } from '@material-ui/core'\n\nexport const SpinnerContent = styled.div`\n  background: #fcb414;\n`\n\nexport const SpinnerText = styled(Typography)`\n  margin-left: 12px !important;\n  text-transform: uppercase;\n  font-weight: bold !important;\n`\n","import React, { PureComponent } from 'react'\nimport PropTypes from 'prop-types'\nimport './Spinner.css'\nimport styled from 'styled-components'\n\nimport { SpinnerText, SpinnerContent } from './styles'\n\nconst SpinnerOverlay = styled.div`\n  opacity: ${props => (props.isLoading ? 1 : 0)};\n  visibility: ${props => (props.isLoading ? 'visibile' : 'hidden')};\n  background: rgba(0, 0, 0, 0.3);\n  position: absolute;\n  top: 0;\n  bottom: 0;\n  left: 0;\n  right: 0;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  z-index: 99;\n  transition: all 0.3s;\n  -moz-transition: all 0.3s;\n  -webkit-transition: all 0.3s;\n`\n\nexport default class Spinner extends PureComponent {\n  static propTypes = {\n    isLoading: PropTypes.bool\n  }\n\n  render() {\n    return (\n      <div>\n        <SpinnerOverlay isLoading={this.props.isLoading}>\n          <div>\n            <SpinnerContent className={'spinner'} />\n          </div>\n          <SpinnerText variant=\"body1\">Loading...</SpinnerText>\n        </SpinnerOverlay>\n      </div>\n    )\n  }\n}\n","import { Button, Table, Icon, TableCell } from '@material-ui/core'\nimport styled from 'styled-components'\n\nexport const TableContent = styled.div`\n  border: 1px solid #efefef;\n  border-radius: 6px;\n  overflow: auto;\n`\n\nexport const TableCellBold = styled(TableCell)`\n  font-weight: bold !important;\n`\n\nexport const StyledButton = styled(Button)`\n  background: #333 !important;\n  color: #fff !important;\n  text-transform: uppercase;\n  font-size: 10px !important;\n  box-shadow: none !important;\n  padding: 7px 14px !important;\n\n  &:hover {\n    background: #fcb414 !important;\n  }\n`\n\nexport const WrapperOverflow = styled.div`\n  overflow: auto;\n`\n\nexport const BtnIcon = styled(Icon)`\n  margin-left: 4px;\n  font-size: 16px !important;\n`\n\nexport const TableWrapper = styled(Table)`\n  width: 100%;\n  min-width: 1000px;\n\n  thead tr th {\n    background: #efefef;\n    color: #222;\n    text-transform: uppercase;\n    font-size: 11px;\n\n    &:first-child {\n      border-radius: 6px 0 0 0;\n    }\n\n    &:last-child {\n      border-radius: 0 6px 0 0;\n    }\n  }\n\n  tr:last-child {\n    th,\n    td {\n      border: none;\n    }\n  }\n\n  th,\n  td {\n    bordercolor: '#efefef !important';\n    padding: 4px 24px;\n  }\n`\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\nimport TableFooter from '@material-ui/core/TableFooter'\nimport TablePagination from '@material-ui/core/TablePagination'\nimport Moment from 'react-moment'\nimport Spinner from '../spinner/Spinner'\n\nimport { StyledButton, BtnIcon, TableWrapper, TableCellBold, WrapperOverflow } from './styles'\n\nexport default class TableView extends Component {\n  static propTypes = {\n    onChangePage: PropTypes.func,\n    onClickButton: PropTypes.func,\n    dataCount: PropTypes.number,\n    page: PropTypes.number,\n    data: PropTypes.array,\n    isLoading: PropTypes.bool\n  }\n\n  static defaultProps = {\n    data: []\n  }\n\n  handleChangePage = (event, page) => {\n    this.props.onChangePage(page)\n  }\n\n  handleClickOpenDialog = person => {\n    this.props.onClickButton(person)\n  }\n\n  render() {\n    const { data, dataCount, page, isLoading } = this.props\n\n    return (\n      <WrapperOverflow>\n        <Spinner isLoading={isLoading} />\n        <TableWrapper>\n          <TableHead>\n            <TableRow>\n              <TableCell>Name</TableCell>\n              <TableCell>Height</TableCell>\n              <TableCell>Mass</TableCell>\n              <TableCell>Gender</TableCell>\n              <TableCell>Edited</TableCell>\n              <TableCell />\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {data.map(row => (\n              <TableRow key={row.name}>\n                <TableCellBold>{row.name}</TableCellBold>\n                <TableCell>{row.height}</TableCell>\n                <TableCell>{row.mass}</TableCell>\n                <TableCell>{row.gender}</TableCell>\n                <TableCell>\n                  <Moment format=\"DD/MM/YYYY hh:mm:ss A\">{row.edited}</Moment>\n                </TableCell>\n                <TableCell align=\"right\">\n                  <StyledButton variant=\"contained\" size=\"small\" color=\"inherit\" onClick={() => this.handleClickOpenDialog(row)}>\n                    Show vehicles\n                    <BtnIcon>open_in_new</BtnIcon>\n                  </StyledButton>\n                </TableCell>\n              </TableRow>\n            ))}\n            {!isLoading && data.length <= 0 ? (\n              <TableRow>\n                <TableCell colSpan={4}>No characters found...</TableCell>\n              </TableRow>\n            ) : null}\n          </TableBody>\n          <TableFooter>\n            <TableRow>\n              <TablePagination\n                labelRowsPerPage=\"\"\n                rowsPerPageOptions={[]}\n                colSpan={12}\n                rowsPerPage={10}\n                count={dataCount}\n                page={page - 1}\n                SelectProps={{\n                  native: true\n                }}\n                onChangePage={this.handleChangePage}\n              />\n            </TableRow>\n          </TableFooter>\n        </TableWrapper>\n      </WrapperOverflow>\n    )\n  }\n}\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\nimport Spinner from '../spinner/Spinner'\n\nimport { TableWrapper, TableContent, TableCellBold, WrapperOverflow } from './styles'\n\nexport default class TableView extends Component {\n  static propTypes = {\n    data: PropTypes.array,\n    isLoading: PropTypes.bool\n  }\n\n  static defaultProps = {\n    data: []\n  }\n\n  render() {\n    const { data, isLoading } = this.props\n\n    return (\n      <WrapperOverflow>\n        <Spinner isLoading={isLoading} />\n        <TableContent>\n          <TableWrapper>\n            <TableHead>\n              <TableRow>\n                <TableCell>Name</TableCell>\n                <TableCell>Model</TableCell>\n                <TableCell>Manufacturer</TableCell>\n                <TableCell>Vehicle Class</TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {data.map(row => (\n                <TableRow key={row.name}>\n                  <TableCellBold>{row.name}</TableCellBold>\n                  <TableCell>{row.model}</TableCell>\n                  <TableCell>{row.manufacturer}</TableCell>\n                  <TableCell>{row.vehicle_class}</TableCell>\n                </TableRow>\n              ))}\n              {!isLoading && data.length <= 0 ? (\n                <TableRow>\n                  <TableCell colSpan={4}>No vehicles found...</TableCell>\n                </TableRow>\n              ) : null}\n            </TableBody>\n          </TableWrapper>\n        </TableContent>\n      </WrapperOverflow>\n    )\n  }\n}\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport DialogTitle from '@material-ui/core/DialogTitle'\nimport Dialog from '@material-ui/core/Dialog'\nimport { DialogContent, Icon, Fab } from '@material-ui/core'\nimport TableViewVehicle from '../table-view/TableViewVehicle'\nimport styled from 'styled-components'\nimport PerfectScrollbar from 'react-perfect-scrollbar'\n\nexport default class DialogView extends Component {\n  static propTypes = {\n    onClose: PropTypes.func,\n    onExited: PropTypes.func,\n    isLoading: PropTypes.bool,\n    person: PropTypes.string,\n    personVehicles: PropTypes.array,\n    open: PropTypes.bool,\n    fullWidth: PropTypes.bool,\n    maxWidth: PropTypes.oneOf(['lg', 'xl', 'sm', 'xs', 'md']).isRequired\n  }\n\n  handleClose = () => {\n    this.props.onClose()\n  }\n\n  render() {\n    const { person, personVehicles, isLoading, ...other } = this.props\n\n    const CloseBtn = styled.div`\n      position: absolute;\n      top: 20px;\n      right: 20px;\n\n      button {\n        box-shadow: none !important;\n      }\n    `\n\n    return (\n      <div>\n        <Dialog onClose={this.handleClose} fullWidth={true} maxWidth={'xs'} {...other}>\n          <DialogTitle>{person ? `${person}'s Vehicles` : ''}</DialogTitle>\n          <CloseBtn onClick={this.handleClose}>\n            <Fab size=\"small\">\n              <Icon>close</Icon>\n            </Fab>\n          </CloseBtn>\n          <DialogContent>\n            <PerfectScrollbar>\n              <TableViewVehicle data={personVehicles} isLoading={isLoading} />\n            </PerfectScrollbar>\n          </DialogContent>\n        </Dialog>\n      </div>\n    )\n  }\n}\n","import { Paper, Typography } from '@material-ui/core'\nimport styled from 'styled-components'\n\nexport const PaperWrapper = styled(Paper)`\n  margin: 60px 0;\n  position: relative;\n`\n\nexport const PaperHeader = styled(Typography)`\n  text-align: left;\n  padding: 12px 20px;\n  display: flex !important;\n  align-items: center;\n  justify-content: space-between;\n  color: #fff !important;\n  font-weight: 200 !important;\n  border-radius: 4px 4px 0 0;\n  background: #f26924;\n  background: -moz-linear-gradient(45deg, #f26924 0%, #fcb414 100%);\n  background: -webkit-gradient(linear, left bottom, right top, color-stop(0%, #f26924), color-stop(100%, #fcb414));\n  background: -webkit-linear-gradient(45deg, #f26924 0%, #fcb414 100%);\n  background: -o-linear-gradient(45deg, #f26924 0%, #fcb414 100%);\n  background: -ms-linear-gradient(45deg, #f26924 0%, #fcb414 100%);\n  background: linear-gradient(45deg, #f26924 0%, #fcb414 100%);\n`\n\nexport const LogoWrapper = styled.div`\n  display: flex;\n  align-items: center;\n\n  .title {\n    color: #fff;\n    margin-left: 24px;\n    font-weight: 200;\n  }\n`\n\nexport const Logo = styled.svg`\n  height: 60px;\n  fill: #fff;\n`\n\nexport const WrapperPos = styled.div`\n  position: relative;\n`\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport './Home.css'\nimport { Grid, Typography, Hidden } from '@material-ui/core'\nimport Search from '../common/search/Search'\nimport TableView from '../common/table-view/TableView'\nimport DialogView from '../common/dialog-view/DialogView'\nimport withWidth from '@material-ui/core/withWidth'\n\nimport { PaperWrapper, PaperHeader, LogoWrapper, Logo, WrapperPos } from './styles'\n\nconst apiRootUrl = 'https://swapi.co/api'\n\nclass Home extends Component {\n  static propTypes = {\n    fetchData: PropTypes.func,\n    setSearch: PropTypes.func,\n    setSelectedPerson: PropTypes.func,\n    removeData: PropTypes.func,\n    setLoading: PropTypes.func,\n    people: PropTypes.array,\n    totalPeopleCount: PropTypes.number,\n    page: PropTypes.number,\n    isLoading: PropTypes.bool,\n    selectedPerson: PropTypes.object,\n    isLoadingDialog: PropTypes.bool,\n    personVehicles: PropTypes.array,\n    width: PropTypes.string.isRequired\n  }\n\n  state = {\n    open: false\n  }\n\n  componentDidMount() {\n    this.props.fetchData(`${apiRootUrl}/people/?page=1`, 1, 'people')\n  }\n\n  handleChangeInput = val => {\n    this.props.setSearch(val)\n    this.props.fetchData(`${apiRootUrl}/people/?search=${val}&page=1`, 1, 'people')\n  }\n\n  handleChangePage = page => {\n    const newPage = page + 1\n    const val = this.props.searchString\n    this.props.fetchData(`${apiRootUrl}/people/?search=${val}&page=${newPage}`, newPage, 'people')\n  }\n\n  handleClickOpenDialog = person => {\n    this.props.setSelectedPerson(person)\n    this.setState({ open: true })\n    this.loadVehicles(person)\n  }\n\n  handleCloseDialog = () => {\n    this.setState({ open: false })\n  }\n\n  handleExited = () => {\n    this.props.removeData('personVehicles')\n  }\n\n  /**\n   * Fetch a person's vehicle in parallel using Promise.all()\n   * @param person the selected person\n   */\n  loadVehicles = person => {\n    if (person.vehicles.length > 0) {\n      let requestArr = []\n\n      // Loop thru all person's vehicle and push to array\n      for (let i = 0; i < person.vehicles.length; i++) {\n        const url = person.vehicles[i]\n        requestArr.push(url)\n      }\n\n      this.props.fetchDataVehicles(requestArr)\n    }\n  }\n\n  render() {\n    const { people, totalPeopleCount, page, isLoading, selectedPerson, isLoadingDialog, personVehicles, width } = this.props\n    const bpWidth = width\n\n    return (\n      <div>\n        <Grid container justify=\"center\">\n          <Grid item xs={11}>\n            <PaperWrapper elevation={1}>\n              <PaperHeader variant=\"h4\" className={`logo-wrapper-${bpWidth}`}>\n                <LogoWrapper>\n                  <Logo viewBox=\"0 0 189.333 107.333\">\n                    <path d=\"M148.175,66.501c0.182,3.29,0.787,7.427,6.254,12.398 c4.987,4.533-2.469,3.289-3.218,3.289c0,0-11.689-0.012-14.726-0.012c-3.036, 0-4.847-1.822-4.847-1.822c4.119,0,7.772-6.001, 7.772-12.145s-6.001-11.378-10.809-11.378s-26.891,0-26.891, 0v24.791h-3.235l-7.001-25H53.642l-3.795,12.651l-3.795-12.651H31.377l-3.289, 12.651l-3.542-12.651H10.567l11.196,37.952h11.386l5.495-17.964l4.878, 17.964h11.133l7.422-25.302h5.676l-7.468,25.294h12.469l2.024-5.313h13.156l1.953, 5.313l25.488-0.024V82.125c0,0,5.819,6.832,8.855,9.615c3.036,2.783,3.29,3.036,7.409, 3.036l29.895-0.202c4.301,0,10.808-3.977,10.808-10.555c0-2.647, 0.052-4.107-3.058-7.607l-4.734-5.609c-2.712-2.53-0.233-2.795, 2.044-2.795h16.391V56.622h-25.57C150.836,56.622,147.994,63.212,148.175,66.501zM77.561, 80.145l4.301-13.916l4.047,13.916H77.561z M124.048,73.27c-3.471,0-8.673,0-8.673,0v-6.832c0,0, 5.89,0,8.673,0C128.024,66.438,128.711,73.27,124.048,73.27z\" />\n                    <path d=\"M166.341,39.947c-4.807,0-4.807-1.771-4.807-1.771c4.119,0,7.772-6.001, 7.772-12.145c0-6.143-6.001-11.377-10.808-11.377s-26.891,0-26.891, 0v25.293h-3.279l-7.083-25.293h-77.47c-6.579,0-9.796,6.317-9.615,9.607c0.182,3.289,0.787,7.427, 6.254,12.397c4.987,4.533-2.469,3.289-3.218,3.289c-3.795,0-26.629,0-26.629,0v12.65c0,0,32.702, 0,37.003,0c4.301,0,9.796-3.977,9.796-10.556c0-2.646, 1.012-4.372-2.098-7.872l-4.734-5.609c-2.712-2.53,0.324-2.53,2.602-2.53c1.265,0,15.624,0, 15.624,0v26.566h12.39V26.031h16.748l-7.845,26.566h12.469l2.024-5.313h13.157l1.953, 5.313h25.614v-12.65c0,0,5.819,6.831,8.855,9.614s3.289,3.036,7.409,3.036c4.119,0,21.451,0, 21.451,0v-12.65C182.984,39.947,171.148,39.947,166.341,39.947z M107.329, 38.176l4.301-13.916l4.048,13.916H107.329z M153.943,31.092c-3.471,0-8.674,0-8.674,0v-6.831c0,0, 5.89,0,8.674,0C157.919,24.261,158.606,31.092,153.943,31.092z\" />\n                  </Logo>\n                  <Hidden smDown>\n                    <Typography className={'title'} variant=\"h4\">\n                      Character List\n                    </Typography>\n                  </Hidden>\n                </LogoWrapper>\n                <Search onChange={this.handleChangeInput} />\n              </PaperHeader>\n\n              <WrapperPos>\n                <TableView\n                  data={people}\n                  dataCount={totalPeopleCount}\n                  page={page}\n                  onChangePage={this.handleChangePage}\n                  onClickButton={this.handleClickOpenDialog}\n                  isLoading={isLoading}\n                />\n              </WrapperPos>\n            </PaperWrapper>\n          </Grid>\n        </Grid>\n\n        <DialogView\n          fullWidth={true}\n          maxWidth={'lg'}\n          open={this.state.open}\n          person={selectedPerson ? selectedPerson.name : null}\n          personVehicles={personVehicles}\n          isLoading={isLoadingDialog}\n          onExited={this.handleExited}\n          onClose={this.handleCloseDialog}\n        />\n      </div>\n    )\n  }\n}\n\nexport default withWidth()(Home)\n","import { connect } from 'react-redux'\nimport Home from './Home'\nimport { homeOperations } from './duck'\n\nconst mapStateToProps = state => {\n  const { totalPeopleCount, people, personVehicles, isLoadingDialog, isLoading, page, searchString, selectedPerson } = state.home\n\n  return {\n    totalPeopleCount,\n    people,\n    personVehicles,\n    isLoadingDialog,\n    isLoading,\n    page,\n    searchString,\n    selectedPerson\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  const fetchData = (url, page) => {\n    dispatch(homeOperations.fetchData(url, page))\n  }\n  const fetchDataVehicle = url => {\n    dispatch(homeOperations.fetchDataVehicle(url))\n  }\n  const fetchDataVehicles = urls => {\n    dispatch(homeOperations.fetchDataVehicles(urls))\n  }\n  const removeData = entity => dispatch(homeOperations.removeData(entity))\n  const setSearch = searchString => dispatch(homeOperations.setSearch(searchString))\n  const setSelectedPerson = person => dispatch(homeOperations.setSelectedPerson(person))\n\n  return { removeData, fetchData, setSearch, setSelectedPerson, fetchDataVehicle, fetchDataVehicles }\n}\n\nconst HomeContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Home)\n\nexport default HomeContainer\n","import React, { Component } from 'react'\nimport './App.css'\n\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles'\nimport CssBaseline from '@material-ui/core/CssBaseline'\nimport styled from 'styled-components'\n\nimport HomeContainer from './app/home/HomeContainer'\n\nconst AppWrapper = styled.div``\n\nconst THEME = createMuiTheme({\n  typography: {\n    useNextVariants: true,\n    fontFamily: '\"Roboto\", \"Helvetica\", \"Arial\", sans-serif',\n    fontSize: 14,\n    fontWeightLight: 300,\n    fontWeightRegular: 400,\n    fontWeightMedium: 500\n  }\n})\n\nclass App extends Component {\n  render() {\n    return (\n      <MuiThemeProvider theme={THEME}>\n        <AppWrapper className=\"App\">\n          <CssBaseline />\n          <HomeContainer />\n        </AppWrapper>\n      </MuiThemeProvider>\n    )\n  }\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\n\nimport { Provider } from 'react-redux'\nimport logger from 'redux-logger'\nimport thunk from 'redux-thunk'\n\nimport { createStore, applyMiddleware } from 'redux'\n\nimport rootReducer from './reducers'\n\nimport './index.css'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\n\nconst middleware = applyMiddleware(thunk, logger)\nconst store = createStore(rootReducer, middleware)\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}